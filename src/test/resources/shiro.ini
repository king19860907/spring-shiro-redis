[main]
sessionManager=org.apache.shiro.session.mgt.DefaultSessionManager
securityManager.sessionManager=$sessionManager

#redis start
jedisPoolConfig=redis.clients.jedis.JedisPoolConfig
jedisPoolConfig.maxIdle=300
jedisPoolConfig.maxWaitMillis=3000
jedisPoolConfig.testOnBorrow=true

jedisConnectionFactory=org.springframework.data.redis.connection.jedis.JedisConnectionFactory
jedisConnectionFactory.hostName=localhost
jedisConnectionFactory.port=6379
jedisConnectionFactory.poolConfig=$jedisPoolConfig


jdkSerializer=org.springframework.data.redis.serializer.JdkSerializationRedisSerializer
stringSerializer=org.springframework.data.redis.serializer.StringRedisSerializer
redisTemplate=org.springframework.data.redis.core.RedisTemplate
redisTemplate.connectionFactory=$jedisConnectionFactory
#key保存为string,value保存为序列化数据
redisTemplate.keySerializer=$stringSerializer
redisTemplate.valueSerializer=$jdkSerializer
#reids end

sessionDAO=org.majun.shiro.session.dao.RedisSessionDao
sessionDAO.keyPrefix=Shiro_Session_test_
sessionDAO.redisTemplate=$redisTemplate
#这句一定要放在sessionDAO.redisTemplate赋值之后
#因为redisTemplate原来是通过spirng加载的,同时通过afterPropertiesSet进行初始化工作
#而通过ini方式加载没办法调用redisTemplate的afterPropertiesSet方法,所以这里通过调用init方法进行redisTemplate初始化的工作
sessionDAO.init=true
sessionIdGenerator=org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator
sessionDAO.sessionIdGenerator=$sessionIdGenerator
sessionManager.sessionDAO=$sessionDAO

[users]
majun=123,admin
wang=123

[roles]
admin=user:*,menu:*

